spring.application.name=sharding-demo
server.port=8081
mybatis-plus.mapper-locations=classpath*:/mapper/*Mapper.xml

spring.shardingsphere.datasource.names=ds01,ds00
spring.shardingsphere.datasource.ds01.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds01.driver-class-name=org.postgresql.Driver
spring.shardingsphere.datasource.ds01.url=jdbc:postgresql://localhost:5432/ds01
spring.shardingsphere.datasource.ds01.username=postgres
spring.shardingsphere.datasource.ds01.password=123456
spring.shardingsphere.datasource.ds01.max-wait=10000
spring.shardingsphere.datasource.ds01.min-idle=5
spring.shardingsphere.datasource.ds01.max-active=100
spring.shardingsphere.datasource.ds01.initial-size=20
spring.shardingsphere.datasource.ds01.time-between-eviction-runs-millis=10000
spring.shardingsphere.datasource.ds01.min-evictable-idle-time-millis=300000
spring.shardingsphere.datasource.ds01.vilidation-query=select 'x'
spring.shardingsphere.datasource.ds01.test-on-borrow=true
spring.shardingsphere.datasource.ds01.pool-prepared-statements=true
spring.shardingsphere.datasource.ds01.max-open-prepared-statements=200

spring.shardingsphere.datasource.ds00.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds00.driver-class-name=org.postgresql.Driver
spring.shardingsphere.datasource.ds00.url=jdbc:postgresql://localhost:5432/ds02
spring.shardingsphere.datasource.ds00.username=postgres
spring.shardingsphere.datasource.ds00.password=123456
spring.shardingsphere.datasource.ds00.max-wait=10000
spring.shardingsphere.datasource.ds00.min-idle=5
spring.shardingsphere.datasource.ds00.max-active=100
spring.shardingsphere.datasource.ds00.initial-size=20
spring.shardingsphere.datasource.ds00.time-between-eviction-runs-millis=10000
spring.shardingsphere.datasource.ds00.min-evictable-idle-time-millis=300000
spring.shardingsphere.datasource.ds00.vilidation-query=select 'x'
spring.shardingsphere.datasource.ds00.test-on-borrow=true
spring.shardingsphere.datasource.ds00.pool-prepared-statements=true
spring.shardingsphere.datasource.ds00.max-open-prepared-statements=200

spring.main.allow-bean-definition-overriding=true
#spring.shardingsphere.sharding.default-data-source-name=ds00
#spring.shardingsphere.sharding.broadcast_tables=t_config,users
#spring.shardingsphere.props.sql.show=true
spring.shardingsphere.props.sql-show=true

#spring.profiles.active=inline

spring.shardingsphere.mode.type=Standalone
spring.shardingsphere.mode.repository.type=JDBC

#spring.shardingsphere.rules.sharding.default-database-strategy.hint.shardingAlgorithmName=HintDBShardingAlgorithm
#spring.shardingsphere.rules.sharding.shardingAlgorithms.database_hint_inline.props.algorithm-expression=ds_${value % 2}

#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
#
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds0$->{id % 2}

# ???????????
#spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds0$->{1..2}.person
#spring.shardingsphere.sharding.tables.person.database-strategy.hint.algorithm-class-name=com.xc.study.config.HintDBShardingAlgorithm


#spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds0$->{1..2}.person
#spring.shardingsphere.sharding.defaultDatabaseStrategy.standard.sharding-algorithm-name=HintDBShardingAlgorithm

#spring.shardingsphere.sharding.defaultDatabaseStrategy.hint.algorithm-class-name=com.xc.study.config.HintDBShardingAlgorithm

#spring.shardingsphere.rules.sharding.tables.person.database-strategy.hint.sharding-algorithm-name=t-order-inline
#spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=HINT_INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=ds0$->{value % 2}

#begin
# ???????????????
#spring.shardingsphere.rules.sharding.tables.person.actual-data-nodes=ds0$->{0..1}.person
#spring.shardingsphere.rules.sharding.default-database-strategy.hint.sharding-algorithm-name=database-inline
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=HINT_INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds0$->{value % 2}
#end
spring.shardingsphere.rules.sharding.tables.person.actual-data-nodes=ds0$->{0..1}.person
spring.shardingsphere.rules.sharding.default-database-strategy.hint.sharding-algorithm-name=database-inline
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=HintDBShardingAlgorithm
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds0$->{value % 2}

#spring.shardingsphere.rules.sharding.default-database-strategy.hint.sharding-algorithm-name=database-inline
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=HintDBShardingAlgorithm
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=com.xc.study.config.HintDBShardingAlgorithm





